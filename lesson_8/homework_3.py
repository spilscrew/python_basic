'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел. Проверить
работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список. Класс-исключение
 должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение. При
этом работа скрипта не должна завершаться.
'''


class Float_Type_Check_Error(Exception):
    error_text = 'Value must be number!\n'

    def __init__(self):
        print(Float_Type_Check_Error.error_text)


ask_value = 'Please enter value:\n'
values_list = []

while True:
    value = input(ask_value)
    if value == 'stop':
        break

    try:
        value = float(value)
        values_list.append(value)
    except ValueError:
        try:
            raise Float_Type_Check_Error
        except Float_Type_Check_Error as error:
            ''

print(values_list)